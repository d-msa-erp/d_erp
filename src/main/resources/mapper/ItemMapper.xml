<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.d_erp.mappers.ItemMapper">


<select id="selectUnits" resultType="kr.co.d_erp.dtos.Item">
	SELECT UNIT_IDX,UNIT_NM FROM TB_UNIT_MST ORDER BY UNIT_IDX
</select>
<select id="selectALLcat1" resultType="kr.co.d_erp.dtos.Item">
        SELECT CAT_IDX, CAT_NM, PARENT_IDX
        FROM TB_ITEM_CAT
        WHERE PARENT_IDX IS NULL OR PARENT_IDX = 0
        ORDER BY CAT_IDX
</select>
<select id="findALLcat2" resultType="kr.co.d_erp.dtos.Item">
        SELECT CAT_IDX, CAT_NM, PARENT_IDX
        FROM TB_ITEM_CAT
        WHERE PARENT_IDX = #{PARENT_IDX}
        ORDER BY CAT_IDX
</select>
<insert id="insertItem" parameterType="kr.co.d_erp.dtos.Item">
	<selectKey keyProperty="ITEM_IDX" resultType="integer" order="BEFORE">
		SELECT "SIN"."ISEQ$$_74438".NEXTVAL FROM DUAL
	</selectKey>
INSERT INTO TB_ITEMMST (ITEM_CD,ITEM_NM,CUST_IDX, ITEM_CAT1, ITEM_CAT2, ITEM_SPEC, ITEM_COST, REMARK,ITEM_UNIT,ITEM_FLAG, OPTIMAL_INV )
VALUES (#{ITEM_CD}, #{ITEM_NM}, #{CUST_IDX}, #{ITEM_CAT1}, #{ITEM_CAT2}, #{ITEM_SPEC}, #{ITEM_COST}, #{REMARK}, #{ITEM_UNIT}, #{ITEM_FLAG}, #{OPTIMAL_INV})
</insert>
<select id="selectALLCust" resultType="kr.co.d_erp.dtos.Item">
select CUST_IDX, CUST_NM FROM TB_CUSTMST order by CUST_NM
</select>
<insert id="insertCust" useGeneratedKeys="true" keyProperty="CUST_IDX" keyColumn="CUST_IDX">
INSERT INTO TB_CUSTMST (CUST_IDX) VALUES (#{CUST_NM})
</insert>

<select id="selectALLItem" resultType="kr.co.d_erp.dtos.Item">
select ITEM_NM, ITEM_CD, ITEM_CAT1, ITEM_CAT2, CUST_IDX, ITEM_UNIT, ITEM_COST,
COALESCE(inv.STOCK_QTY, 0) AS QTY, unit.UNIT_NM AS UNIT_NM FROM TB_ITEMMST itm 
LEFT JOIN TB_INVENTORY inv ON itm.ITEM_IDX = inv.ITEM_IDX
LEFT JOIN TB_UNIT_MST unit ON itm.ITEM_UNIT = unit.UNIT_IDX
</select>

<select id="selectItemById" parameterType="int" resultType="kr.co.d_erp.dtos.Item">
    SELECT ITEM_IDX, ITEM_NM, ITEM_CD, ITEM_CAT1, ITEM_CAT2,CUST_IDX, ITEM_UNIT, ITEM_COST, ITEM_SPEC, REMARK
    FROM TB_ITEMMST WHERE ITEM_IDX = #{ITEM_IDX}
</select>

<update id="updateItem" parameterType="kr.co.d_erp.dtos.Item">
    UPDATE TB_ITEMMST SET
        ITEM_NM = #{ITEM_NM},     ITEM_CD = #{ITEM_CD}, ITEM_CAT1 = #{ITEM_CAT1}, ITEM_CAT2 = #{ITEM_CAT2}, CUST_IDX = #{CUST_IDX},
        ITEM_UNIT = #{ITEM_UNIT}, ITEM_COST = #{ITEM_COST},
        ITEM_SPEC = #{ITEM_SPEC}, REMARK = #{REMARK},OPTIMAL_INV = #{OPTIMAL_INV}
		 WHERE ITEM_IDX = #{ITEM_IDX}
</update>

        <select id="selectPagingItem" parameterType="map" resultType="kr.co.d_erp.dtos.Item">
SELECT
            	itm.ITEM_IDX,
                itm.ITEM_NM,
                itm.ITEM_CD,
		        tic1.CAT_NM AS ITEM_CATX1,
		        tic2.CAT_NM AS ITEM_CATX2,
                tct.CUST_NM,
                ITM.OPTIMAL_INV,
                itm.ITEM_COST,
                COALESCE(inv.STOCK_QTY, 0) AS QTY,
                unit.UNIT_NM,
                itm.ITEM_SPEC,
                itm.REMARK,
                itm.CUST_IDX,
                unit.UNIT_NM
            FROM
                TB_ITEMMST itm
		    LEFT JOIN
		        TB_ITEM_CAT tic1 ON itm.ITEM_CAT1 = tic1.CAT_IDX
		        AND tic1.PARENT_IDX IS NULL
		    LEFT JOIN
		        TB_ITEM_CAT tic2 ON itm.ITEM_CAT2 = tic2.CAT_IDX
		        AND tic2.PARENT_IDX = itm.ITEM_CAT1
		    LEFT JOIN
		    	TB_CUSTMST tct ON itm.CUST_IDX = tct.CUST_IDX
            LEFT JOIN
                TB_INVENTORY inv ON itm.ITEM_IDX = inv.ITEM_IDX
            LEFT JOIN
                TB_UNIT_MST unit ON itm.ITEM_UNIT = unit.UNIT_IDX
        ORDER BY itm.ITEM_IDX DESC
        OFFSET #{offset} ROWS
        FETCH NEXT #{pageSize} ROWS ONLY
        </select>

        <select id="selectCountItem" resultType="long">
            SELECT COUNT(*)
            FROM TB_ITEMMST
        </select>

</mapper>